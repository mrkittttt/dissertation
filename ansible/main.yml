- name: Make preconfigurations on nodes
  hosts: all
  gather_facts: true
  become: true
  tags: preconfigure
  pre_tasks:
    - name: Update apt cache
      when: ansible_distribution == "Ubuntu"
      ansible.builtin.apt:
        update_cache: true
  tasks:
    - name: Include preconfigure.yml
      ansible.builtin.include_tasks: included_tasks/preconfigure.yml


- name: Install and configure containerd
  hosts: all
  gather_facts: true
  become: true
  tags: containerd
  tasks:
    - name: Include containerd.yml
      ansible.builtin.include_tasks: included_tasks/containerd.yml
  handlers:
    - name: Restart containerd service
      ansible.builtin.service:
        name: containerd
        state: restarted


- name: Install kubeadm, kubelet and kubectl
  hosts: all
  gather_facts: true
  become: true
  tags: install_k8s_utils
  tasks:
    - name: Include install_k8s_utils.yml
      ansible.builtin.include_tasks: included_tasks/install_k8s_utils.yml


- name: Initialize k8s cluster
  hosts: initial_master
  gather_facts: false
  become: true
  tags: init_k8s
  tasks:
    - name: Include init_k8s.yml
      ansible.builtin.include_tasks: included_tasks/init_k8s.yml

    - name: Get a token for joining worker nodes
      ansible.builtin.command: "sudo kubeadm token create --print-join-command"
      register: join_command
      changed_when: false


    - name: Create a dummy host for storing a variable to join worker nodes
      ansible.builtin.add_host:
        name: DUMMY_HOST
        join_command: "{{ join_command.stdout }}"
      changed_when: false


- name: Save kubeconfig for current user
  hosts: initial_master
  gather_facts: true
  tags: save_kubeconfig
  tasks:
    - name: Create .kube directory in home directory
      ansible.builtin.file:
        path: ~/.kube
        state: directory
        mode: ug+rwx

    - name: Move /etc/kubernetes/admin.conf to ~/.kube
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: u=rw,go=


- name: Join worker nodes to cluster
  hosts: workers
  gather_facts: false
  become: true
  tags: join_workers
  tasks:
    - name: Join worker nodes to cluster
      ansible.builtin.shell: "{{ hostvars['DUMMY_HOST']['join_command'] }} && touch /var/tmp/kubeadm_workers_joined"
      args:
        creates: /var/tmp/kubeadm_workers_joined


- name: Apply flannel CNI with default settings
  hosts: initial_master
  gather_facts: false
  tags: apply_flannel
  tasks:
    - name: Apply flannel CNI
      ansible.builtin.command: "kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml"
      changed_when: false


- name: Install Helm
  hosts: initial_master
  gather_facts: false
  become: true
  tags: install_helm
  tasks:
    - name: Include install_helm.yml
      ansible.builtin.include_tasks: included_tasks/install_helm.yml


- name: Install NFS CSI
  hosts: initial_master
  gather_facts: false
  tags: install_nfs_csi
  tasks:
    - name: Copy script file for installation
      ansible.builtin.copy:
        src: files/install_nfs_csi.sh
        dest: ~/install_nfs_csi.sh
        mode: u=rwx,go=rx

    - name: Execute install_nfs_csi.sh
      ansible.builtin.shell: ~/install_nfs_csi.sh && touch /var/tmp/nfs_csi_installed
      args:
        creates: /var/tmp/nfs_csi_installed
